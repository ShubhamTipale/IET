1)select ename,hiredate from emp order by month(hiredate);
2) SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) r1 FROM EMP) r2 WHERE r1 % 2 = 1;
3)select avg(sal),min(sal),max(sal) from emp where job="clerk" or job="manager";
4)select ename,job,count(ename) as cnt from emp group by job order by cnt limit 2;
5)select job,sal from emp order by sal limit 1,1;
6)select ename,job,sal,if(comm is null,"No Commission",comm) from emp;
7)select avg(e.sal),d.dname,count(e.ename) as cnt from emp e inner join dept d on e.deptno = d.deptno group by dname having cnt > 3;
8)select ename, sal from emp where sal > (select sal from emp where ename="ADAMS");
9)select ename,sal from emp where sal > (select min(sal) from emp) and sal < (select max(sal) from emp) order by sal;
10)select hiredate,count(ename) from emp group by hiredate limit 1;
 
 -----------------------------------------------------------------------------
Q.1)
drop PROCEDURE if EXISTS pro1 ;
	delimiter $
	create PROCEDURE pro1(x int)
	BEGIN
		DECLARE _depno,_empno,_sal int ;
		DECLARE _ename,_job varchar(20) ;
		declare _hiredate date;

		DECLARE c1 CURSOR for select empno,ename,job,hiredate,sal,deptno from emp where deptno=x;
		declare exit handler from 1329 select " no more record presents " ;	
		
			open c1 ;
			lb1 :LOOP
				fetch c1 INTO _empno,_ename,_job,_hiredate,_sal,_depno ;

				select  _empno,_ename,_job,_hiredate,_sal,_depno ;
			end loop lb1 ;
		close c1 ;
	end $ 
	delimiter ;
	
---------------------------------------------------------------------------------------	
 Q.2)
	
	drop function if exists autoNumber;
 delimiter $
 create function autoNumber() returns int
 deterministic
 BEGIN
	declare max int default 0;
	select max(studentid)+1 into max from student_new;
	return ifnull(max,1);
 end $
 delimiter ;

	
	
	
	